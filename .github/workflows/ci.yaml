name: Build & Release Gandalf Web

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  # Docker Hub image path:  docker.io/<username>/<repo>:tag
  IMAGE: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/gandalf-web


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ${{ env.IMAGE }}:${{ github.ref_name }}
            ${{ env.IMAGE }}:latest

  helm-package:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4
      - name: Package Helm chart
        run: |
          helm dependency update gandalf-chart
          helm package gandalf-chart --app-version ${{ github.ref_name }} \
                                     --version ${{ github.ref_name }}
      - uses: actions/upload-artifact@v4
        with:
          name: gandalf-chart
          path: "*.tgz"

  release:
    runs-on: ubuntu-latest
    needs: helm-package
    permissions:
      contents: write
    steps:
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: "*.tgz"

  deploy:
    name: SSH Deploy to EC2
    needs: build-and-push
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Wait for Docker Hub to update
        run: sleep 30

      - name: Deploy Gandalf Web on VM
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            set -euxo pipefail

            IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/gandalf-web:${{ github.ref_name }}"
            if ! docker pull "docker.io/${IMAGE}" ; then
              echo "⚠️  Tag not found, falling back to latest"
              IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/gandalf-web:latest"
              docker pull "docker.io/${IMAGE}"
            fi

            docker rm -f gandalf-web || true
            docker run -d \
              --name gandalf-web \
              --restart unless-stopped \
              -p 80:80 \
              "docker.io/${IMAGE}"

            # Deploy or update Watchtower to auto-update containers
            docker rm -f watchtower || true
            docker run -d \
              --name watchtower \
              --restart unless-stopped \
              -v /var/run/docker.sock:/var/run/docker.sock \
              containrrr/watchtower:latest \
              --interval 300 \
              gandalf-web
